#ifndef WA_Common_Enums_H
#define WA_Common_Enums_H

/// <summary>
/// Defines WinAudio Errors code
/// </summary>
enum WINAUDIO_ERRORS
{
	WINAUDIO_OK = 0,
	WINAUDIO_FILENOTFOUND,
	WINAUDIO_FILENOTSUPPORTED,
	WINAUDIO_FILENOTOPEN,
	WINAUDIO_OUTPUTNOTREADY,
	WINAUDIO_MALLOCFAIL,
	WINAUDIO_PBTHREADCREATIONFAIL,
	WINAUDIO_EVENTSCREATIONFAIL,
	WINAUDIO_INVALIDOUTPUT,
	WINAUDIO_BADPTR,
	WINAUDIO_CANNOTPLAYFILE,
	WINAUDIO_CANNOTCHANGESTATUS,
	WINAUDIO_STREAMNOTSEEKABLE,
	WINAUDIO_REQUESTFAIL,
	WINAUDIO_OUTOFBUFFER,
	WINAUDIO_INVALIDWINDOW,
	WINAUDIO_BIQUAD_PARAM_ERROR,
	WINAUDIO_BOOST_PARAM_ERROR
};

/// <summary>
/// Define Avaiable Outputs mode
/// </summary>
enum WINAUDIO_OUTPUT
{
	WINAUDIO_WASAPI			= 0,
	WINAUDIO_RESERVED		= 1  // Reserved for Future Implementations
};

/// <summary>
/// Define Playback Status
/// </summary>
enum WINAUDIO_PLAYBACK_STATUS
{
	WINAUDIO_PLAY	= 0,
	WINAUDIO_PAUSE	= 1,
	WINAUDIO_STOP	= 2
};

/// <summary>
/// Define FFT Sample Size (power of 2)
/// </summary>
enum WINAUDIO_FFT_SIZE
{
	WINAUDIO_FFT_512 =	512,
	WINAUDIO_FFT_1024 = 1024,
	WINAUDIO_FFT_2048 = 2048,
	WINAUDIO_FFT_4096 = 4096,
	WINAUDIO_FFT_8192 = 8192
};

/// <summary>
/// Define the type of Biquad filter to set in WinAudio
/// </summary>
enum BIQUAD_FILTER
{
	WINAUDIO_LOWPASS		= 0,
	WINAUDIO_HIGHPASS		= 1,
	WINAUDIO_BANDPASS		= 2,
	WINAUDIO_NOTCH			= 3,
	WINAUDIO_PEAK			= 4,
	WINAUDIO_LOWSHELF		= 5,
	WINAUDIO_HIGHSHELF		= 6,
} ;

#endif
